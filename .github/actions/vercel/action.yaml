name: Deploy Vercel
description: Deploy to Vercel

inputs:
  token:
    description: 'The Vercel token'
    required: true

runs:
  using: 'composite'

  steps:
    - name: Install Vercel CLI
      shell: bash
      run: pnpm add -g vercel@33.2.0

    - name: Pull Vercel Environment Information
      shell: bash
      run: npx vercel pull --yes --environment=preview --token=${{ inputs.token }}

    - name: Build Project Artifacts
      shell: bash
      run: npx vercel build --token=${{ inputs.token }}

    - name: Deploy Project Artifacts to Vercel
      shell: bash
      id: deploy
      run: |
          npx vercel deploy --prebuilt --token=${{ input.token }} > deploy.log
          URL=$(cat deploy.log | grep -o 'https://[^ ]*.vercel.app' | head -n1)
          echo "deploymentUrl=$URL" >> $GITHUB_OUTPUT

    # - name: Deploy Project Artifacts to Vercel
    #   shell: bash
    #   run: echo "DEPLOYMENT_URL=$(npx vercel deploy --prebuilt --token=${{ inputs.token }})"  >> $GITHUB_ENV

    # # Deploy to Vercel Production
    # - name: Pull Vercel Environment Information
    #   shell: bash
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: npx vercel pull --yes --environment=production --token=${{ inputs.token }}

    # - name: Build Project Artifacts
    #   shell: bash
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: npx vercel build --prod --token=${{ inputs.token }}

    # - name: Deploy Project Artifacts to Vercel
    #   shell: bash
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: echo "DEPLOYMENT_URL=$(npx vercel deploy --prebuilt --prod --token=${{ inputs.token }})"  >> $GITHUB_ENV

    # - name: Show Deployment URL
    #   shell: bash
    #   if: github.ref != 'refs/heads/main'
    #   run: gh pr comment ${{ github.event.pull_request.number }} -b "${{ inputs.url-comment-title }}
    #     ${{ env.DEPLOYMENT_URL }}"
